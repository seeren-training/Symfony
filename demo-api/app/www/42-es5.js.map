{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js"],"names":["CELL_TYPE_ITEM","CELL_TYPE_HEADER","CELL_TYPE_FOOTER","NODE_CHANGE_NONE","NODE_CHANGE_POSITION","NODE_CHANGE_CELL","MIN_READS","updateVDom","dom","heightIndex","cells","range","node","change","d","toMutate","end","offset","length","i","cell","find","n","top","push","pool","filter","type","index","visible","forEach","doRender","el","nodeRender","updateCellHeight","children","Array","from","tagName","childrenNu","child","newChild","createNode","classList","add","appendChild","style","transform","remove","reads","template","getTemplate","ownerDocument","importNode","content","querySelector","getViewport","scrollTop","vierportHeight","margin","Math","max","bottom","getRange","viewport","buffer","topPos","bottomPos","min","getShouldUpdate","dirtyIndex","currentRange","findCellIndex","findIndex","c","inplaceUpdate","dst","src","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","len","item","value","height","calcHeightIndex","buf","acum","resizeBuffer","Uint32Array","newBuf","set","subarray","positionForIndex","virtualScrollCss","VirtualScroll","hostRef","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","contentEl","closest","console","error","getScrollElement","scrollEl","updateState","undefined","Promise","resolve","getHeightIndex","cellIndex","scheduleUpdate","checkRange","timerUpdate","clearTimeout","readVS","bind","writeVS","topOffset","offsetTop","offsetParent","offsetHeight","shouldUpdate","domRender","renderItem","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","componentOnReady","then","setTimeout","shouldEnable","enableScrollEvents","Infinity","shouldListen","rmEvent","addEventListener","removeEventListener","renderHeader","renderFooter","VirtualProxy","map","renderVirtualNode","utils","vattrs","classes","Object","assign"],"mappings":"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","file":"42-es5.js","sourcesContent":["import { r as registerInstance, f as readTask, c as writeTask, j as forceUpdate, h, H as Host, i as getElement } from './index-e806d1f6.js';\n\nconst CELL_TYPE_ITEM = 'item';\nconst CELL_TYPE_HEADER = 'header';\nconst CELL_TYPE_FOOTER = 'footer';\nconst NODE_CHANGE_NONE = 0;\nconst NODE_CHANGE_POSITION = 1;\nconst NODE_CHANGE_CELL = 2;\n\nconst MIN_READS = 2;\nconst updateVDom = (dom, heightIndex, cells, range) => {\n  // reset dom\n  for (const node of dom) {\n    node.change = NODE_CHANGE_NONE;\n    node.d = true;\n  }\n  // try to match into exisiting dom\n  const toMutate = [];\n  const end = range.offset + range.length;\n  for (let i = range.offset; i < end; i++) {\n    const cell = cells[i];\n    const node = dom.find(n => n.d && n.cell === cell);\n    if (node) {\n      const top = heightIndex[i];\n      if (top !== node.top) {\n        node.top = top;\n        node.change = NODE_CHANGE_POSITION;\n      }\n      node.d = false;\n    }\n    else {\n      toMutate.push(cell);\n    }\n  }\n  // needs to append\n  const pool = dom.filter(n => n.d);\n  for (const cell of toMutate) {\n    const node = pool.find(n => n.d && n.cell.type === cell.type);\n    const index = cell.i;\n    if (node) {\n      node.d = false;\n      node.change = NODE_CHANGE_CELL;\n      node.cell = cell;\n      node.top = heightIndex[index];\n    }\n    else {\n      dom.push({\n        d: false,\n        cell,\n        visible: true,\n        change: NODE_CHANGE_CELL,\n        top: heightIndex[index],\n      });\n    }\n  }\n  dom\n    .filter(n => n.d && n.top !== -9999)\n    .forEach(n => {\n    n.change = NODE_CHANGE_POSITION;\n    n.top = -9999;\n  });\n};\nconst doRender = (el, nodeRender, dom, updateCellHeight) => {\n  const children = Array.from(el.children).filter(n => n.tagName !== 'TEMPLATE');\n  const childrenNu = children.length;\n  let child;\n  for (let i = 0; i < dom.length; i++) {\n    const node = dom[i];\n    const cell = node.cell;\n    // the cell change, the content must be updated\n    if (node.change === NODE_CHANGE_CELL) {\n      if (i < childrenNu) {\n        child = children[i];\n        nodeRender(child, cell, i);\n      }\n      else {\n        const newChild = createNode(el, cell.type);\n        child = nodeRender(newChild, cell, i) || newChild;\n        child.classList.add('virtual-item');\n        el.appendChild(child);\n      }\n      child['$ionCell'] = cell;\n    }\n    else {\n      child = children[i];\n    }\n    // only update position when it changes\n    if (node.change !== NODE_CHANGE_NONE) {\n      child.style.transform = `translate3d(0,${node.top}px,0)`;\n    }\n    // update visibility\n    const visible = cell.visible;\n    if (node.visible !== visible) {\n      if (visible) {\n        child.classList.remove('virtual-loading');\n      }\n      else {\n        child.classList.add('virtual-loading');\n      }\n      node.visible = visible;\n    }\n    // dynamic height\n    if (cell.reads > 0) {\n      updateCellHeight(cell, child);\n      cell.reads--;\n    }\n  }\n};\nconst createNode = (el, type) => {\n  const template = getTemplate(el, type);\n  if (template && el.ownerDocument) {\n    return el.ownerDocument.importNode(template.content, true).children[0];\n  }\n  return null;\n};\nconst getTemplate = (el, type) => {\n  switch (type) {\n    case CELL_TYPE_ITEM: return el.querySelector('template:not([name])');\n    case CELL_TYPE_HEADER: return el.querySelector('template[name=header]');\n    case CELL_TYPE_FOOTER: return el.querySelector('template[name=footer]');\n  }\n};\nconst getViewport = (scrollTop, vierportHeight, margin) => {\n  return {\n    top: Math.max(scrollTop - margin, 0),\n    bottom: scrollTop + vierportHeight + margin\n  };\n};\nconst getRange = (heightIndex, viewport, buffer) => {\n  const topPos = viewport.top;\n  const bottomPos = viewport.bottom;\n  // find top index\n  let i = 0;\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] > topPos) {\n      break;\n    }\n  }\n  const offset = Math.max(i - buffer - 1, 0);\n  // find bottom index\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] >= bottomPos) {\n      break;\n    }\n  }\n  const end = Math.min(i + buffer, heightIndex.length);\n  const length = end - offset;\n  return { offset, length };\n};\nconst getShouldUpdate = (dirtyIndex, currentRange, range) => {\n  const end = range.offset + range.length;\n  return (dirtyIndex <= end ||\n    currentRange.offset !== range.offset ||\n    currentRange.length !== range.length);\n};\nconst findCellIndex = (cells, index) => {\n  const max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n  if (index === 0) {\n    return 0;\n  }\n  else if (index === max + 1) {\n    return cells.length;\n  }\n  else {\n    return cells.findIndex(c => c.index === index);\n  }\n};\nconst inplaceUpdate = (dst, src, offset) => {\n  if (offset === 0 && src.length >= dst.length) {\n    return src;\n  }\n  for (let i = 0; i < src.length; i++) {\n    dst[i + offset] = src[i];\n  }\n  return dst;\n};\nconst calcCells = (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) => {\n  const cells = [];\n  const end = len + offset;\n  for (let i = offset; i < end; i++) {\n    const item = items[i];\n    if (headerFn) {\n      const value = headerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_HEADER,\n          value,\n          index: i,\n          height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n          reads: headerHeight ? 0 : MIN_READS,\n          visible: !!headerHeight,\n        });\n      }\n    }\n    cells.push({\n      i: j++,\n      type: CELL_TYPE_ITEM,\n      value: item,\n      index: i,\n      height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n      reads: itemHeight ? 0 : MIN_READS,\n      visible: !!itemHeight,\n    });\n    if (footerFn) {\n      const value = footerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_FOOTER,\n          value,\n          index: i,\n          height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\n          reads: footerHeight ? 0 : MIN_READS,\n          visible: !!footerHeight,\n        });\n      }\n    }\n  }\n  return cells;\n};\nconst calcHeightIndex = (buf, cells, index) => {\n  let acum = buf[index];\n  for (let i = index; i < buf.length; i++) {\n    buf[i] = acum;\n    acum += cells[i].height;\n  }\n  return acum;\n};\nconst resizeBuffer = (buf, len) => {\n  if (!buf) {\n    return new Uint32Array(len);\n  }\n  if (buf.length === len) {\n    return buf;\n  }\n  else if (len > buf.length) {\n    const newBuf = new Uint32Array(len);\n    newBuf.set(buf);\n    return newBuf;\n  }\n  else {\n    return buf.subarray(0, len);\n  }\n};\nconst positionForIndex = (index, cells, heightIndex) => {\n  const cell = cells.find(c => c.type === CELL_TYPE_ITEM && c.index === index);\n  if (cell) {\n    return heightIndex[cell.i];\n  }\n  return -1;\n};\n\nconst virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\n\nconst VirtualScroll = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.range = { offset: 0, length: 0 };\n    this.viewportHeight = 0;\n    this.cells = [];\n    this.virtualDom = [];\n    this.isEnabled = false;\n    this.viewportOffset = 0;\n    this.currentScrollTop = 0;\n    this.indexDirty = 0;\n    this.lastItemLen = 0;\n    this.totalHeight = 0;\n    /**\n     * It is important to provide this\n     * if virtual item height will be significantly larger than the default\n     * The approximate height of each virtual item template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxItemHeight = 45;\n    /**\n     * The approximate height of each header template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxHeaderHeight = 30;\n    /**\n     * The approximate width of each footer template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxFooterHeight = 30;\n    this.onScroll = () => {\n      this.updateVirtualScroll();\n    };\n  }\n  itemsChanged() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  async connectedCallback() {\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n      return;\n    }\n    this.scrollEl = await contentEl.getScrollElement();\n    this.contentEl = contentEl;\n    this.calcCells();\n    this.updateState();\n  }\n  componentDidUpdate() {\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.scrollEl = undefined;\n  }\n  onResize() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  /**\n   * Returns the position of the virtual item at the given index.\n   */\n  positionForItem(index) {\n    return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n  }\n  /**\n   * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n   * dirty any time the content or their style changes.\n   *\n   * The subset of items to be updated can are specifing by an offset and a length.\n   */\n  async checkRange(offset, len = -1) {\n    // TODO: kind of hacky how we do in-place updated of the cells\n    // array. this part needs a complete refactor\n    if (!this.items) {\n      return;\n    }\n    const length = (len === -1)\n      ? this.items.length - offset\n      : len;\n    const cellIndex = findCellIndex(this.cells, offset);\n    const cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n    this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n    this.lastItemLen = this.items.length;\n    this.indexDirty = Math.max(offset - 1, 0);\n    this.scheduleUpdate();\n  }\n  /**\n   * This method marks the tail the items array as dirty, so they can be re-rendered.\n   *\n   * It's equivalent to calling:\n   *\n   * ```js\n   * virtualScroll.checkRange(lastItemLen);\n   * ```\n   */\n  async checkEnd() {\n    if (this.items) {\n      this.checkRange(this.lastItemLen);\n    }\n  }\n  updateVirtualScroll() {\n    // do nothing if virtual-scroll is disabled\n    if (!this.isEnabled || !this.scrollEl) {\n      return;\n    }\n    // unschedule future updates\n    if (this.timerUpdate) {\n      clearTimeout(this.timerUpdate);\n      this.timerUpdate = undefined;\n    }\n    // schedule DOM operations into the stencil queue\n    readTask(this.readVS.bind(this));\n    writeTask(this.writeVS.bind(this));\n  }\n  readVS() {\n    const { contentEl, scrollEl, el } = this;\n    let topOffset = 0;\n    let node = el;\n    while (node && node !== contentEl) {\n      topOffset += node.offsetTop;\n      node = node.offsetParent;\n    }\n    this.viewportOffset = topOffset;\n    if (scrollEl) {\n      this.viewportHeight = scrollEl.offsetHeight;\n      this.currentScrollTop = scrollEl.scrollTop;\n    }\n  }\n  writeVS() {\n    const dirtyIndex = this.indexDirty;\n    // get visible viewport\n    const scrollTop = this.currentScrollTop - this.viewportOffset;\n    const viewport = getViewport(scrollTop, this.viewportHeight, 100);\n    // compute lazily the height index\n    const heightIndex = this.getHeightIndex();\n    // get array bounds of visible cells base in the viewport\n    const range = getRange(heightIndex, viewport, 2);\n    // fast path, do nothing\n    const shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n    if (!shouldUpdate) {\n      return;\n    }\n    this.range = range;\n    // in place mutation of the virtual DOM\n    updateVDom(this.virtualDom, heightIndex, this.cells, range);\n    // Write DOM\n    // Different code paths taken depending of the render API used\n    if (this.nodeRender) {\n      doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n    }\n    else if (this.domRender) {\n      this.domRender(this.virtualDom);\n    }\n    else if (this.renderItem) {\n      forceUpdate(this);\n    }\n  }\n  updateCellHeight(cell, node) {\n    const update = () => {\n      if (node['$ionCell'] === cell) {\n        const style = window.getComputedStyle(node);\n        const height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n        this.setCellHeight(cell, height);\n      }\n    };\n    if (node && node.componentOnReady) {\n      node.componentOnReady().then(update);\n    }\n    else {\n      update();\n    }\n  }\n  setCellHeight(cell, height) {\n    const index = cell.i;\n    // the cell might changed since the height update was scheduled\n    if (cell !== this.cells[index]) {\n      return;\n    }\n    if (cell.height !== height || cell.visible !== true) {\n      cell.visible = true;\n      cell.height = height;\n      this.indexDirty = Math.min(this.indexDirty, index);\n      this.scheduleUpdate();\n    }\n  }\n  scheduleUpdate() {\n    clearTimeout(this.timerUpdate);\n    this.timerUpdate = setTimeout(() => this.updateVirtualScroll(), 100);\n  }\n  updateState() {\n    const shouldEnable = !!(this.scrollEl &&\n      this.cells);\n    if (shouldEnable !== this.isEnabled) {\n      this.enableScrollEvents(shouldEnable);\n      if (shouldEnable) {\n        this.updateVirtualScroll();\n      }\n    }\n  }\n  calcCells() {\n    if (!this.items) {\n      return;\n    }\n    this.lastItemLen = this.items.length;\n    this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n    this.indexDirty = 0;\n  }\n  getHeightIndex() {\n    if (this.indexDirty !== Infinity) {\n      this.calcHeightIndex(this.indexDirty);\n    }\n    return this.heightIndex;\n  }\n  calcHeightIndex(index = 0) {\n    // TODO: optimize, we don't need to calculate all the cells\n    this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n    this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n    this.indexDirty = Infinity;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.rmEvent) {\n      this.rmEvent();\n      this.rmEvent = undefined;\n    }\n    const scrollEl = this.scrollEl;\n    if (scrollEl) {\n      this.isEnabled = shouldListen;\n      scrollEl.addEventListener('scroll', this.onScroll);\n      this.rmEvent = () => {\n        scrollEl.removeEventListener('scroll', this.onScroll);\n      };\n    }\n  }\n  renderVirtualNode(node) {\n    const { type, value, index } = node.cell;\n    switch (type) {\n      case CELL_TYPE_ITEM: return this.renderItem(value, index);\n      case CELL_TYPE_HEADER: return this.renderHeader(value, index);\n      case CELL_TYPE_FOOTER: return this.renderFooter(value, index);\n    }\n  }\n  render() {\n    return (h(Host, { style: {\n        height: `${this.totalHeight}px`\n      } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map(node => this.renderVirtualNode(node))))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"itemHeight\": [\"itemsChanged\"],\n    \"headerHeight\": [\"itemsChanged\"],\n    \"footerHeight\": [\"itemsChanged\"],\n    \"items\": [\"itemsChanged\"]\n  }; }\n};\nconst VirtualProxy = ({ dom }, children, utils) => {\n  return utils.map(children, (child, i) => {\n    const node = dom[i];\n    const vattrs = child.vattrs || {};\n    let classes = vattrs.class || '';\n    classes += 'virtual-item ';\n    if (!node.visible) {\n      classes += 'virtual-loading';\n    }\n    return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: `translate3d(0,${node.top}px,0)` }) }) });\n  });\n};\nVirtualScroll.style = virtualScrollCss;\n\nexport { VirtualScroll as ion_virtual_scroll };\n"]}